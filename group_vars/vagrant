---
common_hostname_name: servername
common_hostname_domain: nestihacky.local
common_resolv_search: local
common_resolv_nameservers: # OpenDNS
- 208.67.222.222
- 208.67.220.220

local_pub_key:  "{{ lookup('env','HOME') }}/.ssh/id_rsa.pub"
common_ssh_keys: "{{ local_pub_key }}"
gitolite_admin_key: "{{ local_pub_key }}"

cgit_hostname: "cgit.{{ common_hostname_domain }}"

# MAILSERVER

mailserver_admin_email: "postmaster@{{ common_hostname_domain }}"

#mailserver_ssl_cert: "/etc/letsencrypt/live/{{ common_hostname_domain }}/cert.pem"
#mailserver_ssl_key: "/etc/letsencrypt/live/{{ common_hostname_domain }}/privkey.pem"

mailserver_db_username: mailuser
mailserver_db_password: CHANGE_ME_MAIL
mailserver_db_database: mailserver
mailserver_opendmarc_db_username: opendmarc
mailserver_opendmarc_db_password: CHANGE_ME_DMARC
mailserver_opendmarc_db_database: opendmarc

mailserver_hostname: "{{ common_hostname_name }}.{{ common_hostname_domain }}"
mailserver_domain: "{{ common_hostname_domain }}"
mailserver_domains:
  - name: "{{ common_hostname_domain }}"
    pk_id: 1
  - name: "lists.{{ common_hostname_domain }}"
    pk_id: 2

# You can generate password hashes for dovecot with:
# doveadm pw -s SHA512-CRYPT

mailserver_users:
  - account: root
    domain: "{{ common_hostname_domain }}"
    # !! hashed CHANGE_ME for all users
    password_hash: $6$PentA.6C8Nfq7a6o$ZCSqECXNoVzlC4umZAIoIBoVmnKI7QrCli9/N0aazs7Nwj6aXX3s/JuQmxi3GpgxtEBv.NFbk.N//J/Wg4Bhf1
    domain_pk_id: 1
  - account: testing
    domain: "{{ common_hostname_domain }}"
    password_hash: $6$PentA.6C8Nfq7a6o$ZCSqECXNoVzlC4umZAIoIBoVmnKI7QrCli9/N0aazs7Nwj6aXX3s/JuQmxi3GpgxtEBv.NFbk.N//J/Wg4Bhf1
    domain_pk_id: 1
mailserver_aliases:
  - source: "testalias@{{ common_hostname_domain }}"
    destination: "testing@{{ common_hostname_domain }}"
    domain_pk_id: 1
  - source: "maildebug@{{ common_hostname_domain }}"
    destination: "root@{{ common_hostname_domain }}"
    domain_pk_id: 1

# MAILMAN
mailman_admin: "root@{{ common_hostname_domain }}"
mailman_domain: "lists.{{ common_hostname_domain }}"
mailman_password: CHANGE_ME_MAILMAN

#mailman_ssl_cert: "/etc/letsencrypt/live/{{ mailman_domain }}/cert.pem"
#mailman_ssl_key: "/etc/letsencrypt/live/{{ mailman_domain }}/privkey.pem"
#mailman_ssl_chain: "/etc/letsencrypt/live/{{ mailman_domain }}/chain.pem"

# PAGURE

pagure_db_pass: CHANGE_ME_PAGURE
pagure_secret_key: CHANGE_ME_PAGURE_SECRET
pagure_secret_salt_email: CHANGE_ME_PAGURE_SALT_EMAIL

pagure_domain: "git.{{ common_hostname_domain }}"
pagure_docs_domain: "docs.git.{{ common_hostname_domain }}"

#pagure_ssl_cert: "/etc/letsencrypt/live/{{ pagure_domain }}/cert.pem"
#pagure_ssl_key: "/etc/letsencrypt/live/{{ pagure_domain }}/privkey.pem"
#pagure_ssl_chain: "/etc/letsencrypt/live/{{ pagure_domain }}/privkey.pem"

#pagure_docs_ssl_cert: "/etc/letsencrypt/live/{{ pagure_docs_domain }}/cert.pem"
#pagure_docs_ssl_key: "/etc/letsencrypt/live/{{ pagure_docs_domain }}/privkey.pem"
#pagure_docs_ssl_chain: "/etc/letsencrypt/live/{{ pagure_docs_domain }}/chain.pem"

pagure_from_email: 'pagure@{{ pagure_domain }}'
pagure_email_error: "root@{{ common_hostname_domain }}"
pagure_domain_email_notifications: '{{ pagure_domain }}'

postgresql_databases:
  - name: pagure
  - name: "{{ mailserver_db_database }}"
    notify: import sql postfix
  - name: "{{ mailserver_opendmarc_db_database }}"
    notify: import sql opendmarc

postgresql_users:
  - name: pagure
    pass: "{{ pagure_db_pass }}"
    encrypted: no
  - name: "{{ mailserver_db_username }}"
    pass: "{{ mailserver_db_password }}"
    encrypted: no       # denotes if the password is already encrypted.
  - name: "{{ mailserver_opendmarc_db_username }}"
    pass: "{{ mailserver_opendmarc_db_password }}"
    encrypted: no       # denotes if the password is already encrypted.

postgresql_user_privileges:
  - name: pagure
    db: pagure
    priv: "ALL"
  - name: "{{ mailserver_db_username }}"
    db: "{{ mailserver_db_database }}"
    priv: "ALL"
  - name: "{{ mailserver_opendmarc_db_username }}"
    db: "{{ mailserver_opendmarc_db_database }}"
    priv: "ALL"

# manual depsolving /o\
postfix_smtpd_milters_append: ',unix:/var/run/pagure/paguresock'
postfix_alias_maps_append: ', hash:/etc/mailman/aliases'
postfix_local_recipient_maps_append: ', $alias_maps'
postfix_mydestination_append: ', $mydomain, lists.$mydomain' 

apache_ssl_listen: 14443
pagure_ssl_listen: 14444
mailman_ssl_listen: 14445
graphite_ssl_listen: 14446

# SELinux
httpd_execmem: True # pagure

# sniproxy
sniproxy_routes:
  - domain: "lists.{{ common_hostname_domain }}"
    target: "127.0.0.1:{{ mailman_ssl_listen }}"
  - domain: "git.{{ common_hostname_domain }}"
    target: "[::0]:{{ pagure_ssl_listen }}"
  - domain: "graphite.{{ common_hostname_domain }}"
    target: "[::0]:{{ graphite_ssl_listen }}"
  - domain: "{{ common_hostname_domain }}"
    target: "127.0.0.1:{{ apache_ssl_listen }}"

# letsencrypt
letsencrypt_autogenerate: False # dry run
letsencrypt_email: "root@{{ common_hostname_domain }}"
letsencrypt_domains:
  - "{{ common_hostname_domain }}"
  - "lists.{{ common_hostname_domain }}"
  - "git.{{ common_hostname_domain }}"
  - "docs.git.{{ common_hostname_domain }}"

# graphite
graphite_domain: "graphite.{{ common_hostname_domain }}"
graphite_secret_csrf_key: CHANGE_ME_GRAPHITE_CSRF
